// Copyright 2021-present the Fonction authors. All rights reserved. MIT license.
export * from './common/mod.ts'
export { curry } from './deps.ts'
export { add } from './src/add.ts'
export { advance } from './src/advance.ts'
export { and } from './src/and.ts'
export { append } from './src/append.ts'
export { chunk } from './src/chunk.ts'
export { _ } from './src/constants/index.ts'
export { constructorName } from './src/constructorName.ts'
export { dec } from './src/dec.ts'
export { defaultTo } from './src/defaultTo.ts'
export { divide } from './src/divide.ts'
export { equal } from './src/equal.ts'
export { F } from './src/F.ts'
export type { FlattenDeep } from './src/flattenDeep.ts'
export { flattenDeep } from './src/flattenDeep.ts'
export { gt } from './src/gt.ts'
export { gte } from './src/gte.ts'
export { has } from './src/has.ts'
export { identity } from './src/identity.ts'
export { ifElse } from './src/ifElse.ts'
export { ifElseFn } from './src/ifElseFn.ts'
export { inc } from './src/inc.ts'
export { K } from './src/K.ts'
export { lt } from './src/lt.ts'
export { lte } from './src/lte.ts'
export { multiply } from './src/multiply.ts'
export { N } from './src/N.ts'
export { NN } from './src/NN.ts'
export { not } from './src/not.ts'
export { or } from './src/or.ts'
export { pipe } from './src/pipe.ts'
export { prepend } from './src/prepend.ts'
export { product } from './src/product.ts'
export { props } from './src/props.ts'
export { subtract } from './src/subtract.ts'
export { sum } from './src/sum.ts'
export { T } from './src/T.ts'
export { tail } from './src/tail.ts'
export { take } from './src/take.ts'
export { takeLast } from './src/takeLast.ts'
export { tap } from './src/tap.ts'
export { tryCatch } from './src/tryCatch.ts'
export type {
  AnyFn,
  Arity1Fn,
  Empty,
  FalsyLike,
  Ord,
  Primitive,
  Space,
  TypedArray
} from './src/types/index.ts'
export { uniq } from './src/uniq.ts'
export { xor } from './src/xor.ts'
