import{o as n,c as a,a as s,b as e}from"./app.ebf0e892.js";const t='{"title":"not variable","description":"","frontmatter":{},"headers":[{"level":2,"title":"not variable","slug":"not-variable"},{"level":2,"title":"Remarks","slug":"remarks"},{"level":2,"title":"Example","slug":"example"}],"relativePath":"api/not/index.md","lastUpdated":1619873947485}',o={},p=e('<h2 id="not-variable"><a class="header-anchor" href="#not-variable" aria-hidden="true">#</a> not variable</h2><p>Returns the <code>!</code> of its argument.</p><p><b>Signature:</b></p><div class="language-typescript"><pre><code>not<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">Falsy</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token builtin">boolean</span>\n</code></pre></div><h2 id="remarks"><a class="header-anchor" href="#remarks" aria-hidden="true">#</a> Remarks</h2><p>The Definition of Falsy - <code>&#39;&#39;</code> - <code>false</code> - <code>0</code> - <code>NaN</code> - <code>undefined</code> - <code>null</code></p><h2 id="example"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><div class="language-ts"><pre><code><span class="token function">not</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token function">not</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token function">not</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token function">not</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token function">not</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token function">not</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n\n</code></pre></div>',8);o.render=function(e,t,o,c,l,r){return n(),a("div",null,[s(" Do not edit this file. It is automatically generated by API Documenter. "),p])};export default o;export{t as __pageData};
