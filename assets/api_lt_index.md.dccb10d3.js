import{o as n,c as a,a as s,b as e}from"./app.77d74c8b.js";const t='{"title":"lt variable","description":"","frontmatter":{},"headers":[{"level":2,"title":"lt variable","slug":"lt-variable"},{"level":2,"title":"Example 1","slug":"example-1"},{"level":2,"title":"Example 2","slug":"example-2"},{"level":2,"title":"Example 3","slug":"example-3"}],"relativePath":"api/lt/index.md","lastUpdated":1618752518755}',p={},o=e('<h2 id="lt-variable"><a class="header-anchor" href="#lt-variable" aria-hidden="true">#</a> lt variable</h2><blockquote><p>This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.</p></blockquote><p>Returns <code>true</code> if the first argument is less than the second; otherwise <code>false</code></p><p><b>Signature:</b></p><div class="language-typescript"><pre><code>lt<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> bigint<span class="token operator">&gt;</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>\n</code></pre></div><h2 id="example-1"><a class="header-anchor" href="#example-1" aria-hidden="true">#</a> Example 1</h2><div class="language-ts"><pre><code><span class="token comment">// Number</span>\n<span class="token function">lt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token function">lt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n\n</code></pre></div><h2 id="example-2"><a class="header-anchor" href="#example-2" aria-hidden="true">#</a> Example 2</h2><div class="language-ts"><pre><code><span class="token comment">// Bigint</span>\n<span class="token function">lt</span><span class="token punctuation">(</span><span class="token number">1n</span><span class="token punctuation">,</span> <span class="token number">2n</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token function">lt</span><span class="token punctuation">(</span><span class="token number">2n</span><span class="token punctuation">,</span> <span class="token number">2n</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n\n</code></pre></div><h2 id="example-3"><a class="header-anchor" href="#example-3" aria-hidden="true">#</a> Example 3</h2><div class="language-ts"><pre><code><span class="token comment">// String</span>\n<span class="token function">lt</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;z&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token function">lt</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n\n</code></pre></div>',11);p.render=function(e,t,p,l,c,i){return n(),a("div",null,[s(" Do not edit this file. It is automatically generated by API Documenter. "),o])};export default p;export{t as __pageData};
