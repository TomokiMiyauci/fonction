name: release

on:
  push:
    branches:
      - beta
      - main
    paths-ignore:
      - examples/**
      - docs/**

jobs:
  # audit:
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       node: [15]

  #   steps:
  #     - uses: actions/setup-node@v2-beta
  #       with:
  #         node-version: ${{ matrix.node }}

  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Audit
  #       run: yarn audit --level critical

  setup:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [15]

    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Install
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: yarn --check-files --frozen-lockfile --non-interactive

  build:
    needs: [setup]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [15]

    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Build
        run: yarn build

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  docs:
    needs: [build]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [15]

    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Prepare
        run: yarn prepare:docs

      - name: Build
        run: yarn build:docs

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/.vitepress/dist

  lint:
    needs: [setup]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [15]

    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Lint
        run: yarn lint

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [15]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Deno
        uses: denolib/setup-deno@v2
        with:
          deno-version: v1.15.x

      - name: Test
        run: yarn test --unstable --coverage=coverage

      - name: Generate coverage report
        run: deno --unstable coverage ./coverage --lcov > coverage.lcov

      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage.lcov

  report-coverage:
    needs: [test]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: coverage

      - uses: codecov/codecov-action@v1
        with:
          files: coverage.lcov

  release:
    needs: [lint, test, build]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [15]
    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Release
        run: yarn release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_PUBLIC }}
